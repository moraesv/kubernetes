apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-credentials
type: Opaque
data:
  address: "YW1xcDovL2d1ZXN0Omd1ZXN0QHJhYmJpdG1xOjU2NzI="
---
apiVersion: v1
kind: Secret
metadata:
  name: keda-rabbitmq-secret
data:
  host: "YW1xcDovL2d1ZXN0Omd1ZXN0QHJhYmJpdG1xLmRlZmF1bHQ6NTY3Mi8="
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer2
spec:
  replicas: 0
  selector:
    matchLabels:
      app: consumer2
  template:
    metadata:
      labels:
        app: consumer2
    spec:
      containers:
        - name: consumer2
          image: ghcr.io/kedify/blog05-cli-consumer-program:latest
          command: ["/bin/bash"]
          args: ["/scripts/consumer-script.sh"]
          volumeMounts:
            - name: script-volume
              mountPath: /scripts
          env:
            - name: RABBITMQ_URL
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-credentials
                  key: address
      volumes:
        - name: script-volume
          configMap:
            name: consumer-script-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: consumer-script-config
data:
  consumer-script.sh: |
    #! /bin/bash
    currentMessage=""

    handle_sigterm() {
        if [ -n "$currentMessage" ]; then
            echo "SIGTERM signal received while processing a message."
            curl -X POST http://result-analyzer-service:8080/kill/count -s
            echo "Kill count HTTP request sent."
        else
            echo "SIGTERM signal received, but no message was being processed."
        fi
        exit 0
    }

    trap 'handle_sigterm' SIGTERM

    while true; do
      echo "Waiting for message...\n"
      if ! currentMessage=$(amqp-consume --url="$RABBITMQ_URL" -q "hello" -c 1 cat); then
          echo "Error occurred during message consumption. Exiting...\n"
          continue
      fi
      echo "Message received, processing: $currentMessage \n"

      i=1
      while [ $i -le 120 ]; do
          echo "Message $i"
          sleep 1
          i=$((i+1))
      done
      currentMessage=""
      curl -X POST http://result-analyzer-service:8080/create/count -s
      echo "Waiting for next message...\n"
    done
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: keda-trigger-auth-rabbitmq-conn
spec:
  secretTargetRef:
    - parameter: host
      name: keda-rabbitmq-secret
      key: host
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: rabbitmq-scaledobject
spec:
  #minReplicaCount: 0 # Optional. Default: 0
  pollingInterval: 10 # Optional. Default: 5 seconds
  cooldownPeriod: 10 # Optional. Default: 300 seconds
  scaleTargetRef:
    name: consumer2
  triggers:
    - type: rabbitmq
      metadata:
        protocol: amqp
        queueName: hello
        mode: QueueLength
        value: "1"
      authenticationRef:
        name: keda-trigger-auth-rabbitmq-conn
